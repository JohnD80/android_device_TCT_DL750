From a9e7f33f1c0b67e571cc39e9fb5dc76bc78978a0 Mon Sep 17 00:00:00 2001
From: LineageOS-MTK <luzejij@binka.me>
Date: Tue, 7 Feb 2017 14:07:39 +0300
Subject: [PATCH] frameworks_telephony_opt

---
 .../com/android/internal/telephony/SubscriptionInfoUpdater.java    | 2 +-
 src/java/com/android/internal/telephony/gsm/GSMPhone.java          | 7 ++++++-
 src/java/com/android/internal/telephony/uicc/IccConstants.java     | 3 +++
 src/java/com/android/internal/telephony/uicc/RuimRecords.java      | 7 ++++---
 src/java/com/android/internal/telephony/uicc/SIMRecords.java       | 7 ++++---
 src/java/com/android/internal/telephony/uicc/SIMRecords.java | 4 ++--
 .../android/internal/telephony/SubscriptionController.java   | 12 ++++++++++++
 src/java/com/android/internal/telephony/PhoneBase.java | 6 +++---
 8 file changed, 35 insertions(+), 13 deletions(-)

diff --git a/src/java/com/android/internal/telephony/SubscriptionInfoUpdater.java b/src/java/com/android/internal/telephony/SubscriptionInfoUpdater.java
index 24c0f2d3a..c8ac89b95 100644
--- a/src/java/com/android/internal/telephony/SubscriptionInfoUpdater.java
+++ b/src/java/com/android/internal/telephony/SubscriptionInfoUpdater.java
@@ -309,7 +309,7 @@ public void handleMessage(Message msg) {
                         mIccId[slotId] = ICCID_STRING_FOR_NO_SIM;
                     }
                 } else {
-                    mIccId[slotId] = ICCID_STRING_FOR_NO_SIM;
+                    mIccId[slotId] = IccConstants.FAKE_ICCID;
                     logd("Query IccId fail: " + ar.exception);
                 }
                 logd("sIccId[" + slotId + "] = " + mIccId[slotId]);
diff --git a/src/java/com/android/internal/telephony/gsm/GSMPhone.java b/src/java/com/android/internal/telephony/gsm/GSMPhone.java
index e2624dad1..183e445ea 100644
--- a/src/java/com/android/internal/telephony/gsm/GSMPhone.java
+++ b/src/java/com/android/internal/telephony/gsm/GSMPhone.java
@@ -1514,7 +1514,12 @@ private void updateCallForwardStatus() {
             // Complete pending USSD
 
             if (isUssdRelease) {
-                found.onUssdRelease();
+                // MTK weirdness
+                if(ussdMessage != null) {
+                    found.onUssdFinished(ussdMessage, isUssdRequest);
+                } else {
+                    found.onUssdRelease();
+                }
             } else if (isUssdError) {
                 found.onUssdFinishedError();
             } else {
diff --git a/src/java/com/android/internal/telephony/uicc/IccConstants.java b/src/java/com/android/internal/telephony/uicc/IccConstants.java
index d395fc186..cbe621f7a 100644
--- a/src/java/com/android/internal/telephony/uicc/IccConstants.java
+++ b/src/java/com/android/internal/telephony/uicc/IccConstants.java
@@ -107,4 +107,7 @@
 
     //UICC access
     static final String DF_ADF = "7FFF";
+	
+	//CM-Specific : Fake ICCID
+    static final String FAKE_ICCID = "00000000000001";
 }
diff --git a/src/java/com/android/internal/telephony/uicc/RuimRecords.java b/src/java/com/android/internal/telephony/uicc/RuimRecords.java
index d348c8125..445e25a4a 100644
--- a/src/java/com/android/internal/telephony/uicc/RuimRecords.java
+++ b/src/java/com/android/internal/telephony/uicc/RuimRecords.java
@@ -690,10 +690,11 @@ public void handleMessage(Message msg) {
                 data = (byte[])ar.result;
 
                 if (ar.exception != null) {
-                    break;
+                    mIccId = FAKE_ICCID;
+                }
+                else {
+	                mIccId = IccUtils.bcdToString(data, 0, data.length);
                 }
-
-                mIccId = IccUtils.bcdToString(data, 0, data.length);
 
                 log("iccid: " + mIccId);
 
diff --git a/src/java/com/android/internal/telephony/uicc/SIMRecords.java b/src/java/com/android/internal/telephony/uicc/SIMRecords.java
index 8b6f74395..496158efd 100644
--- a/src/java/com/android/internal/telephony/uicc/SIMRecords.java
+++ b/src/java/com/android/internal/telephony/uicc/SIMRecords.java
@@ -874,11 +874,12 @@ public void handleMessage(Message msg) {
                 data = (byte[])ar.result;
 
                 if (ar.exception != null) {
-                    break;
+                    mIccId = FAKE_ICCID;
+ +                }
+ +                else {
+                    mIccId = IccUtils.bcdToString(data, 0, data.length);
                 }
 
-                mIccId = IccUtils.bcdToString(data, 0, data.length);
-
                 log("iccid: " + mIccId);
 
             break;

diff --git a/src/java/com/android/internal/telephony/uicc/SIMRecords.java b/src/java/com/android/internal/telephony/uicc/SIMRecords.java
index 496158efd..100abd774 100644
--- a/src/java/com/android/internal/telephony/uicc/SIMRecords.java
+++ b/src/java/com/android/internal/telephony/uicc/SIMRecords.java
@@ -875,8 +875,8 @@ public void handleMessage(Message msg) {
 
                 if (ar.exception != null) {
                     mIccId = FAKE_ICCID;
- +                }
- +                else {
+                }
+                else {
                     mIccId = IccUtils.bcdToString(data, 0, data.length);
                 }
 

diff --git a/src/java/com/android/internal/telephony/SubscriptionController.java b/src/java/com/android/internal/telephony/SubscriptionController.java
index 2979a760e..e74d0b01b 100644
--- a/src/java/com/android/internal/telephony/SubscriptionController.java
+++ b/src/java/com/android/internal/telephony/SubscriptionController.java
@@ -265,6 +265,13 @@ public void notifySubscriptionInfoChanged() {
          broadcastSimInfoContentChanged();
      }
 
+	 private boolean isNumeric(String str) {
+         for (char c : str.toCharArray()) {
+             if (!Character.isDigit(c)) return false;
+         }
+         return true;
+     }
+
     /**
      * New SubInfoRecord instance and fill in detail info
      * @param cursor
@@ -309,6 +316,11 @@ private SubscriptionInfo getSubInfoRecord(Cursor cursor) {
                 + " mcc:" + mcc + " mnc:" + mnc + " countIso:" + countryIso + " userNwMode:" + userNwMode);
         }
 
+		if (isNumeric(carrierName)) {
+            carrierName = displayName;
+            logd("[getSubInfoRecord] carrierName changed to: " + displayName);
+        }
+
         // If line1number has been set to a different number, use it instead.
         String line1Number = mTelephonyManager.getLine1NumberForSubscriber(id);
         if (!TextUtils.isEmpty(line1Number) && !line1Number.equals(number)) {

diff --git a/src/java/com/android/internal/telephony/PhoneBase.java b/src/java/com/android/internal/telephony/PhoneBase.java
index dc790d798..07b36c362 100644
--- a/src/java/com/android/internal/telephony/PhoneBase.java
+++ b/src/java/com/android/internal/telephony/PhoneBase.java
@@ -1750,7 +1750,7 @@ public void setPreferredNetworkType(int networkType, Message response) {
         // Only set preferred network types to that which the modem supports
         int modemRaf = getRadioAccessFamily();
         int rafFromType = RadioAccessFamily.getRafFromNetworkType(networkType);
-
+/*
         if (modemRaf == RadioAccessFamily.RAF_UNKNOWN
                 || rafFromType == RadioAccessFamily.RAF_UNKNOWN) {
             Rlog.d(LOG_TAG, "setPreferredNetworkType: Abort, unknown RAF: "
@@ -1764,8 +1764,8 @@ public void setPreferredNetworkType(int networkType, Message response) {
             }
             return;
         }
-
-        int filteredRaf = (rafFromType & modemRaf);
+*/
+        int filteredRaf = (rafFromType);
         int filteredType = RadioAccessFamily.getNetworkTypeFromRaf(filteredRaf);
 
         // The getNetworkTypeFromRaf, has no way to differentiate between MODE_GSM_UMTS
